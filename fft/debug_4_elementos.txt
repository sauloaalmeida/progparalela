tamArray=8
Array de entrada: 0.000000 0.000000 0.000000 1.000000 0.000000 2.000000 0.000000 3.000000 

j=1
>> inicio rotina de bit reverso
   >> loop bit reverso: j=1, i=1

   m=4
   bitreverso depois do  while: m=4 j=1 
   bitreverso depois do while, com j atualizado: j = j+m; j=5 
   >> loop bit reverso: j=5, i=3
   loop bitreverso: entrou no IF: troca i=3(real:1.000000;imag:0.000000), com j=5(real:2.000000;imag:0.000000)

   m=4
      bitreverso loop while: m=4 j=5 
         bitreverso loop while apos atualizacao: m=2 j=1 
   bitreverso depois do  while: m=2 j=1 
   bitreverso depois do while, com j atualizado: j = j+m; j=3 
   >> loop bit reverso: j=3, i=5

   m=4
   bitreverso depois do  while: m=4 j=3 
   bitreverso depois do while, com j atualizado: j = j+m; j=7 
   >> loop bit reverso: j=7, i=7

   m=4
      bitreverso loop while: m=4 j=7 
         bitreverso loop while apos atualizacao: m=2 j=3 
      bitreverso loop while: m=2 j=3 
         bitreverso loop while apos atualizacao: m=1 j=1 
   bitreverso depois do  while: m=1 j=1 
   bitreverso depois do while, com j atualizado: j = j+m; j=2 
<< fim rotina de bit reverso

>> inicio rotina de calculo do fourier
   >> inicio do loop externo do calculo do fourier
   mmax=2
   istep=mmax * 2;   istep=4
   theta=isign * (6.28318530717959/mmax);   theta=3.141593
      >> inicio do for interno 1 - for (m=1;m<mmax;m+=2) m=1, mmax=2
         >> inicio do for interno 2 - for (i=m;i<=tamArray;i+=istep) i=1, m=1, istep=4
         j=i+mmax; -> j=2, i=1, mmax=2          j depois de atualizado -> j=3
         tempr = wr*data[j]-wi*data[j+1]; -> j=3, data[j+1]=0.000000, wi=0.000000, wr=1.000000, data[j]=2.000000          tempr=2.000000
         tempi = wr*data[j+1]+wi*data[j]; -> data[j]=2.000000, wi=0.000000, data[j+1]=0.000000, wr=1.000000          tempi=0.000000
         data[j] = data[i]-tempr; -> tempr=2.000000 data[i]=0.000000, i=1, j=3          data[j]=-2.000000 j=3
         data[j+1] = data[i+1]-tempi; -> tempi=0.000000, data[i+1]=0.000000, i=1, j=3          data[j+1]=0.000000 j=3
         data[i] = data[i] +tempr; -> tempr=2.000000, data[i]=0.000000, i=1          data[i]=2.000000 i=1
         data[i+1] = data[i+1] + tempi; -> tempi=0.000000, data[i+1]=0.000000, i=1          data[i+1]=0.000000 i=1
         >> final do for interno 2
         >> inicio do for interno 2 - for (i=m;i<=tamArray;i+=istep) i=5, m=1, istep=4
         j=i+mmax; -> j=3, i=5, mmax=2          j depois de atualizado -> j=7
         tempr = wr*data[j]-wi*data[j+1]; -> j=7, data[j+1]=0.000000, wi=0.000000, wr=1.000000, data[j]=3.000000          tempr=3.000000
         tempi = wr*data[j+1]+wi*data[j]; -> data[j]=3.000000, wi=0.000000, data[j+1]=0.000000, wr=1.000000          tempi=0.000000
         data[j] = data[i]-tempr; -> tempr=3.000000 data[i]=1.000000, i=5, j=7          data[j]=-2.000000 j=7
         data[j+1] = data[i+1]-tempi; -> tempi=0.000000, data[i+1]=0.000000, i=5, j=7          data[j+1]=0.000000 j=7
         data[i] = data[i] +tempr; -> tempr=3.000000, data[i]=1.000000, i=5          data[i]=4.000000 i=5
         data[i+1] = data[i+1] + tempi; -> tempi=0.000000, data[i+1]=0.000000, i=5          data[i+1]=0.000000 i=5
         >> final do for interno 2
      wr = (wtemp=wr)*wpr-(wi*wpi)+wr; - wr=1.000000,wpi=-0.000000,wi=0.000000,wpr=-2.000000,wtemp=1.000000 =>       wr=-1.000000
      wi = (wi*wpr)+(wtemp*wpi)+wi; - wi=0.000000,wpi=-0.000000,wtemp=1.000000,wpr=-2.000000 =>       wi=-0.000000
      << final do for interno 1

   mmax=istep;  mmax=4
   << final do loop externo do calculo do fourier
   >> inicio do loop externo do calculo do fourier
   mmax=2
   istep=mmax * 2;   istep=8
   theta=isign * (6.28318530717959/mmax);   theta=1.570796
      >> inicio do for interno 1 - for (m=1;m<mmax;m+=2) m=1, mmax=4
         >> inicio do for interno 2 - for (i=m;i<=tamArray;i+=istep) i=1, m=1, istep=8
         j=i+mmax; -> j=7, i=1, mmax=4          j depois de atualizado -> j=5
         tempr = wr*data[j]-wi*data[j+1]; -> j=5, data[j+1]=0.000000, wi=0.000000, wr=1.000000, data[j]=4.000000          tempr=4.000000
         tempi = wr*data[j+1]+wi*data[j]; -> data[j]=4.000000, wi=0.000000, data[j+1]=0.000000, wr=1.000000          tempi=0.000000
         data[j] = data[i]-tempr; -> tempr=4.000000 data[i]=2.000000, i=1, j=5          data[j]=-2.000000 j=5
         data[j+1] = data[i+1]-tempi; -> tempi=0.000000, data[i+1]=0.000000, i=1, j=5          data[j+1]=0.000000 j=5
         data[i] = data[i] +tempr; -> tempr=4.000000, data[i]=2.000000, i=1          data[i]=6.000000 i=1
         data[i+1] = data[i+1] + tempi; -> tempi=0.000000, data[i+1]=0.000000, i=1          data[i+1]=0.000000 i=1
         >> final do for interno 2
      wr = (wtemp=wr)*wpr-(wi*wpi)+wr; - wr=1.000000,wpi=1.000000,wi=0.000000,wpr=-1.000000,wtemp=0.707107 =>       wr=-0.000000
      wi = (wi*wpr)+(wtemp*wpi)+wi; - wi=0.000000,wpi=1.000000,wtemp=1.000000,wpr=-1.000000 =>       wi=1.000000
      << final do for interno 1

      >> inicio do for interno 1 - for (m=1;m<mmax;m+=2) m=3, mmax=4
         >> inicio do for interno 2 - for (i=m;i<=tamArray;i+=istep) i=3, m=3, istep=8
         j=i+mmax; -> j=5, i=3, mmax=4          j depois de atualizado -> j=7
         tempr = wr*data[j]-wi*data[j+1]; -> j=7, data[j+1]=0.000000, wi=1.000000, wr=-0.000000, data[j]=-2.000000          tempr=0.000000
         tempi = wr*data[j+1]+wi*data[j]; -> data[j]=-2.000000, wi=1.000000, data[j+1]=0.000000, wr=-0.000000          tempi=-2.000000
         data[j] = data[i]-tempr; -> tempr=0.000000 data[i]=-2.000000, i=3, j=7          data[j]=-2.000000 j=7
         data[j+1] = data[i+1]-tempi; -> tempi=-2.000000, data[i+1]=0.000000, i=3, j=7          data[j+1]=2.000000 j=7
         data[i] = data[i] +tempr; -> tempr=0.000000, data[i]=-2.000000, i=3          data[i]=-2.000000 i=3
         data[i+1] = data[i+1] + tempi; -> tempi=-2.000000, data[i+1]=0.000000, i=3          data[i+1]=-2.000000 i=3
         >> final do for interno 2
      wr = (wtemp=wr)*wpr-(wi*wpi)+wr; - wr=-0.000000,wpi=1.000000,wi=1.000000,wpr=-1.000000,wtemp=1.000000 =>       wr=-1.000000
      wi = (wi*wpr)+(wtemp*wpi)+wi; - wi=1.000000,wpi=1.000000,wtemp=-0.000000,wpr=-1.000000 =>       wi=-0.000000
      << final do for interno 1

   mmax=istep;  mmax=8
   << final do loop externo do calculo do fourier
<< final da rotina de calculo do fourier
6.000000 0.000000 -2.000000 -2.000000 -2.000000 0.000000 -2.000000 2.000000 

